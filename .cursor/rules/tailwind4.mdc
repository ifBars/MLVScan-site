---
description: Developing in Tailwind CSS v4
globs: 
alwaysApply: false
---
# Tailwind CSS v4: Modern Development Standards (IDE Rule File)

This markdown document is designed as a Cursor IDE rule reference and guide for developers working with Tailwind CSS v4. It encapsulates modern usage patterns, best practices, and conventions to ensure scalable, maintainable, and performant Tailwind-based UI development.

---

## 🧠 General Principles

* **Utility-First Philosophy**: Embrace small, composable classes over traditional semantic CSS.
* **Purge-Optimized**: Remove unused styles using Tailwind's built-in tree-shaking via the `content` configuration.
* **Minimal Custom CSS**: Prefer using Tailwind classes; limit custom CSS to utility extensions or necessary overrides.

---

* Use TypeScript config files for IDE type safety.
* Extend theme only when needed (e.g., custom fonts, colors).
* Add official Tailwind plugins to enhance form, prose, and layout support.

---

## 🧩 Component Design Patterns

### ✅ DO:

```html
<button class="px-4 py-2 rounded-lg bg-brand text-white hover:bg-brand/90 transition">Submit</button>
```

### ❌ DON'T:

```html
<style>
  .btn {
    padding: 0.5rem 1rem;
    background: #1E40AF;
    color: white;
    border-radius: 0.5rem;
  }
</style>
<button class="btn">Submit</button>
```

> Avoid abstracting into classes unless they are reused **many** times and are static in design.

---

## 📐 Responsive Design

* Use Tailwind's responsive prefixes: `sm:`, `md:`, `lg:`, `xl:`, `2xl:`
* Example:

```html
<div class="p-2 md:p-4 lg:p-6">
  <p class="text-base md:text-lg lg:text-xl">Responsive Typography</p>
</div>
```

---

## 🌘 Dark Mode

Tailwind v4 uses the `media` or `class` strategy:

```ts
  darkMode: 'class',
```

Use conditional classes:

```html
<div class="bg-white dark:bg-black text-black dark:text-white">
  Dark mode content
</div>
```

---

## 🎯 IDE Tips (Cursor, VSCode, WebStorm)

* Use the Tailwind CSS IntelliSense extension.
* Enable `class` sorting (e.g., via Prettier plugin).
* Consider `@tailwindcss/language-server` for deeper integration.

---

## 🧪 Testing with Tailwind

* Use `data-testid` attributes for DOM targeting.
* Don't rely on class names for test selectors.
* Use `@testing-library/react` or `playwright` for end-to-end tests.

---

## 🧹 Cleaning and Linting

* Use `prettier-plugin-tailwindcss` to sort classes consistently.
* Run `pnpm lint` / `eslint .` with Tailwind-friendly configs.
* Watch for `@apply` misuse; don't over-abstract.

---

## 📚 Resources

* [Tailwind CSS v4 Docs](https://tailwindcss.com/docs)
* [Heroicons](https://heroicons.com)
* [Headless UI](https://headlessui.com)
* [ShadCN/UI](https://ui.shadcn.com)

---

This rule file serves as a markdown-based design and development guide for modern Tailwind CSS v4 usage within collaborative environments like Cursor IDE.

